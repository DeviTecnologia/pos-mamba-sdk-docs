const { readdirSync, statSync } = require('fs');
const { join } = require('path');
const fetch = require('node-fetch');
const loaderUtils = require('loader-utils');
const globby = require('globby');

const directories = p => readdirSync(p).filter(f => statSync(join(p, f)).isDirectory());

// The motivation of this loader is to keep components navigations up to date.
// We call our repository to read folders which are our packages
// For development we use the FIXTURE to avoid calls to github API.
// We can use local folder packages which is generated by postinstall script
function loader (source, mode = "local") {
  this.cacheable && this.cacheable();
  this.value = source;

  const opts = Object.assign(
    { localPath: 'packages', githubPath: '' },
    loaderUtils.getOptions(this) || {},
  );

  let packages = [];

  if(mode === "github") {

    if(process.env.NODE_ENV === 'development') {
      console.warn(`⚠️ MODE GITHUB -> NO NAVIGATION COMPONENTS GENERATED FOR DEVELOPMENT! USING FIXTURE.\nNODE_ENV: ${process.env.NODE_ENV}`);
      return `module.exports = ${JSON.stringify(require('./NAV_FIXTURE'))};`;
    }
    
    fetch(`https://api.github.com/repos/stone-payments/pos-mamba-sdk/contents/${opts.githubPath}`)
      .then(res => res.json())
      .then(body => (packages = body));
    packages = packages.reduce((r, c) => {
      root.push({ title: c.name, to: `/${c.name.toLowerCase()}` });
      return root
    }, []);

  } else {
    packages = directories(opts.localPath).reduce((r, c) => {
        r.push({ title: c.charAt(0).toUpperCase() + c.slice(1), to: `/${c.toLowerCase()}` });
        return r;
      }, []);
  }
  
  return `module.exports = ${JSON.stringify(packages)};`;
};

module.exports = loader